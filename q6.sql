USE springboardopt;

-- -------------------------------------
SET @v1 = 1612521;
SET @v2 = 1145072;
SET @v3 = 1828467;
SET @v4 = 'MGT382';
SET @v5 = 'Amber Hill';
SET @v6 = 'MGT';
SET @v7 = 'EE';			  
SET @v8 = 'MAT';

-- 6. List the names of students who have taken all courses offered by department v8 (deptId).
EXPLAIN ANALYZE SELECT name FROM Student,
	(SELECT studId
	FROM Transcript
		WHERE crsCode IN
		(SELECT crsCode FROM Course WHERE deptId = @v8 AND crsCode IN (SELECT crsCode FROM Teaching))
		GROUP BY studId
		HAVING COUNT(*) = 
			(SELECT COUNT(*) FROM Course WHERE deptId = @v8 AND crsCode IN (SELECT crsCode FROM Teaching))) as alias
WHERE id = alias.studId;

-- '-> Nested loop inner join  (cost=1041.00 rows=0) (actual time=5.989..5.989 rows=0 loops=1)\n    -> Filter: (student.id is not null)  (cost=41.00 rows=400) (actual time=0.024..0.324 rows=400 loops=1)\n        -> Table scan on Student  (cost=41.00 rows=400) (actual time=0.023..0.291 rows=400 loops=1)\n    -> Index lookup on alias using <auto_key0> (studId=student.id)  (actual time=0.000..0.000 rows=0 loops=400)\n        -> Materialize  (cost=0.00..0.00 rows=0) (actual time=0.014..0.014 rows=0 loops=400)\n            -> Filter: (count(0) = (select #5))  (actual time=5.383..5.383 rows=0 loops=1)\n                -> Table scan on <temporary>  (actual time=0.001..0.002 rows=19 loops=1)\n                    -> Aggregate using temporary table  (actual time=5.378..5.380 rows=19 loops=1)\n                        -> Nested loop inner join  (cost=1020.25 rows=10000) (actual time=0.229..0.440 rows=19 loops=1)\n                            -> Filter: (transcript.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.005..0.113 rows=100 loops=1)\n                                -> Table scan on Transcript  (cost=10.25 rows=100) (actual time=0.005..0.100 rows=100 loops=1)\n                            -> Single-row index lookup on <subquery3> using <auto_distinct_key> (crsCode=transcript.crsCode)  (actual time=0.001..0.001 rows=0 loops=100)\n                                -> Materialize with deduplication  (cost=120.52..120.52 rows=100) (actual time=0.003..0.003 rows=0 loops=100)\n                                    -> Filter: (course.crsCode is not null)  (cost=110.52 rows=100) (actual time=0.123..0.206 rows=19 loops=1)\n                                        -> Filter: (teaching.crsCode = course.crsCode)  (cost=110.52 rows=100) (actual time=0.123..0.204 rows=19 loops=1)\n                                            -> Inner hash join (<hash>(teaching.crsCode)=<hash>(course.crsCode))  (cost=110.52 rows=100) (actual time=0.122..0.198 rows=19 loops=1)\n                                                -> Table scan on Teaching  (cost=0.13 rows=100) (actual time=0.003..0.058 rows=100 loops=1)\n                                                -> Hash\n                                                    -> Filter: (course.deptId = <cache>((@v8)))  (cost=10.25 rows=10) (actual time=0.010..0.081 rows=19 loops=1)\n                                                        -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.003..0.064 rows=100 loops=1)\n                -> Select #5 (subquery in condition; uncacheable)\n                    -> Aggregate: count(0)  (actual time=0.244..0.245 rows=1 loops=19)\n                        -> Nested loop inner join  (cost=111.25 rows=1000) (actual time=0.129..0.241 rows=19 loops=19)\n                            -> Filter: ((course.deptId = <cache>((@v8))) and (course.crsCode is not null))  (cost=10.25 rows=10) (actual time=0.008..0.097 rows=19 loops=19)\n                                -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.006..0.074 rows=100 loops=19)\n                            -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.001..0.001 rows=1 loops=361)\n                                -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                    -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.003..0.078 rows=100 loops=19)\n                                        -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.003..0.069 rows=100 loops=19)\n            -> Select #5 (subquery in projection; uncacheable)\n                -> Aggregate: count(0)  (actual time=0.244..0.245 rows=1 loops=19)\n                    -> Nested loop inner join  (cost=111.25 rows=1000) (actual time=0.129..0.241 rows=19 loops=19)\n                        -> Filter: ((course.deptId = <cache>((@v8))) and (course.crsCode is not null))  (cost=10.25 rows=10) (actual time=0.008..0.097 rows=19 loops=19)\n                            -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.006..0.074 rows=100 loops=19)\n                        -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.001..0.001 rows=1 loops=361)\n                            -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.003..0.078 rows=100 loops=19)\n                                    -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.003..0.069 rows=100 loops=19)\n'
-- After adding student.id index:
-- '-> Nested loop inner join  (cost=48.75 rows=100) (actual time=4.902..4.902 rows=0 loops=1)\n    -> Filter: (alias.studId is not null)  (cost=0.14..13.75 rows=100) (actual time=4.900..4.900 rows=0 loops=1)\n        -> Table scan on alias  (cost=2.50..2.50 rows=0) (actual time=0.002..0.002 rows=0 loops=1)\n            -> Materialize  (cost=2.50..2.50 rows=0) (actual time=4.899..4.899 rows=0 loops=1)\n                -> Filter: (count(0) = (select #5))  (actual time=4.892..4.892 rows=0 loops=1)\n                    -> Table scan on <temporary>  (actual time=0.001..0.002 rows=19 loops=1)\n                        -> Aggregate using temporary table  (actual time=4.883..4.886 rows=19 loops=1)\n                            -> Nested loop inner join  (cost=1020.25 rows=10000) (actual time=0.210..0.378 rows=19 loops=1)\n                                -> Filter: (transcript.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.038..0.116 rows=100 loops=1)\n                                    -> Table scan on Transcript  (cost=10.25 rows=100) (actual time=0.038..0.106 rows=100 loops=1)\n                                -> Single-row index lookup on <subquery3> using <auto_distinct_key> (crsCode=transcript.crsCode)  (actual time=0.001..0.001 rows=0 loops=100)\n                                    -> Materialize with deduplication  (cost=120.52..120.52 rows=100) (actual time=0.002..0.002 rows=0 loops=100)\n                                        -> Filter: (course.crsCode is not null)  (cost=110.52 rows=100) (actual time=0.092..0.157 rows=19 loops=1)\n                                            -> Filter: (teaching.crsCode = course.crsCode)  (cost=110.52 rows=100) (actual time=0.092..0.155 rows=19 loops=1)\n                                                -> Inner hash join (<hash>(teaching.crsCode)=<hash>(course.crsCode))  (cost=110.52 rows=100) (actual time=0.091..0.151 rows=19 loops=1)\n                                                    -> Table scan on Teaching  (cost=0.13 rows=100) (actual time=0.005..0.047 rows=100 loops=1)\n                                                    -> Hash\n                                                        -> Filter: (course.deptId = <cache>((@v8)))  (cost=10.25 rows=10) (actual time=0.012..0.068 rows=19 loops=1)\n                                                            -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.006..0.054 rows=100 loops=1)\n                    -> Select #5 (subquery in condition; uncacheable)\n                        -> Aggregate: count(0)  (actual time=0.228..0.228 rows=1 loops=19)\n                            -> Nested loop inner join  (cost=111.25 rows=1000) (actual time=0.124..0.226 rows=19 loops=19)\n                                -> Filter: ((course.deptId = <cache>((@v8))) and (course.crsCode is not null))  (cost=10.25 rows=10) (actual time=0.004..0.085 rows=19 loops=19)\n                                    -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.003..0.066 rows=100 loops=19)\n                                -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.001..0.001 rows=1 loops=361)\n                                    -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                        -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.001..0.070 rows=100 loops=19)\n                                            -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.001..0.058 rows=100 loops=19)\n                -> Select #5 (subquery in projection; uncacheable)\n                    -> Aggregate: count(0)  (actual time=0.228..0.228 rows=1 loops=19)\n                        -> Nested loop inner join  (cost=111.25 rows=1000) (actual time=0.124..0.226 rows=19 loops=19)\n                            -> Filter: ((course.deptId = <cache>((@v8))) and (course.crsCode is not null))  (cost=10.25 rows=10) (actual time=0.004..0.085 rows=19 loops=19)\n                                -> Table scan on Course  (cost=10.25 rows=100) (actual time=0.003..0.066 rows=100 loops=19)\n                            -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.001..0.001 rows=1 loops=361)\n                                -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                    -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.001..0.070 rows=100 loops=19)\n                                        -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.001..0.058 rows=100 loops=19)\n    -> Index lookup on Student using idx_student_id (id=alias.studId)  (cost=0.25 rows=1) (never executed)\n'
-- After adding course.deptId index:
-- '-> Nested loop inner join  (cost=7.12 rows=10) (actual time=3.957..3.957 rows=0 loops=1)\n    -> Filter: (alias.studId is not null)  (cost=0.36..3.62 rows=10) (actual time=3.956..3.956 rows=0 loops=1)\n        -> Table scan on alias  (cost=2.50..2.50 rows=0) (actual time=0.001..0.001 rows=0 loops=1)\n            -> Materialize  (cost=2.50..2.50 rows=0) (actual time=3.956..3.956 rows=0 loops=1)\n                -> Filter: (count(0) = (select #5))  (actual time=3.949..3.949 rows=0 loops=1)\n                    -> Table scan on <temporary>  (actual time=0.000..0.002 rows=19 loops=1)\n                        -> Aggregate using temporary table  (actual time=3.943..3.946 rows=19 loops=1)\n                            -> Remove duplicate Transcript rows using temporary table (weedout)  (cost=2093.74 rows=1900) (actual time=0.250..0.402 rows=19 loops=1)\n                                -> Filter: (teaching.crsCode = course.crsCode)  (cost=2093.74 rows=1900) (actual time=0.247..0.392 rows=19 loops=1)\n                                    -> Inner hash join (<hash>(teaching.crsCode)=<hash>(course.crsCode))  (cost=2093.74 rows=1900) (actual time=0.247..0.386 rows=19 loops=1)\n                                        -> Table scan on Teaching  (cost=1.81 rows=100) (actual time=0.004..0.116 rows=100 loops=1)\n                                        -> Hash\n                                            -> Filter: (transcript.crsCode = course.crsCode)  (cost=192.94 rows=190) (actual time=0.102..0.226 rows=19 loops=1)\n                                                -> Inner hash join (<hash>(transcript.crsCode)=<hash>(course.crsCode))  (cost=192.94 rows=190) (actual time=0.101..0.221 rows=19 loops=1)\n                                                    -> Table scan on Transcript  (cost=0.07 rows=100) (actual time=0.006..0.091 rows=100 loops=1)\n                                                    -> Hash\n                                                        -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.034..0.057 rows=19 loops=1)\n                    -> Select #5 (subquery in condition; uncacheable)\n                        -> Aggregate: count(0)  (actual time=0.178..0.178 rows=1 loops=19)\n                            -> Nested loop inner join  (cost=194.55 rows=1900) (actual time=0.126..0.175 rows=19 loops=19)\n                                -> Filter: (course.crsCode is not null)  (cost=2.65 rows=19) (actual time=0.005..0.031 rows=19 loops=19)\n                                    -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.005..0.029 rows=19 loops=19)\n                                -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.000..0.001 rows=1 loops=361)\n                                    -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                        -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.002..0.081 rows=100 loops=19)\n                                            -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.001..0.070 rows=100 loops=19)\n                -> Select #5 (subquery in projection; uncacheable)\n                    -> Aggregate: count(0)  (actual time=0.178..0.178 rows=1 loops=19)\n                        -> Nested loop inner join  (cost=194.55 rows=1900) (actual time=0.126..0.175 rows=19 loops=19)\n                            -> Filter: (course.crsCode is not null)  (cost=2.65 rows=19) (actual time=0.005..0.031 rows=19 loops=19)\n                                -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.005..0.029 rows=19 loops=19)\n                            -> Single-row index lookup on <subquery6> using <auto_distinct_key> (crsCode=course.crsCode)  (actual time=0.000..0.001 rows=1 loops=361)\n                                -> Materialize with deduplication  (cost=20.25..20.25 rows=100) (actual time=0.007..0.007 rows=1 loops=361)\n                                    -> Filter: (teaching.crsCode is not null)  (cost=10.25 rows=100) (actual time=0.002..0.081 rows=100 loops=19)\n                                        -> Table scan on Teaching  (cost=10.25 rows=100) (actual time=0.001..0.070 rows=100 loops=19)\n    -> Index lookup on Student using idx_student_id (id=alias.studId)  (cost=0.26 rows=1) (never executed)\n'
-- After adding teaching.crsCode index:
-- '-> Nested loop inner join  (cost=7.12 rows=10) (actual time=3.050..3.050 rows=0 loops=1)\n    -> Filter: (alias.studId is not null)  (cost=0.36..3.62 rows=10) (actual time=3.049..3.049 rows=0 loops=1)\n        -> Table scan on alias  (cost=2.50..2.50 rows=0) (actual time=0.000..0.000 rows=0 loops=1)\n            -> Materialize  (cost=2.50..2.50 rows=0) (actual time=3.049..3.049 rows=0 loops=1)\n                -> Filter: (count(0) = (select #5))  (actual time=3.033..3.033 rows=0 loops=1)\n                    -> Table scan on <temporary>  (actual time=0.000..0.002 rows=19 loops=1)\n                        -> Aggregate using temporary table  (actual time=3.027..3.030 rows=19 loops=1)\n                            -> Filter: (transcript.crsCode = `<subquery3>`.crsCode)  (cost=210.26 rows=196) (actual time=1.392..1.513 rows=19 loops=1)\n                                -> Inner hash join (<hash>(transcript.crsCode)=<hash>(`<subquery3>`.crsCode))  (cost=210.26 rows=196) (actual time=1.391..1.507 rows=19 loops=1)\n                                    -> Table scan on Transcript  (cost=1.31 rows=100) (actual time=0.587..0.683 rows=100 loops=1)\n                                    -> Hash\n                                        -> Table scan on <subquery3>  (cost=0.14..2.74 rows=20) (actual time=0.001..0.003 rows=19 loops=1)\n                                            -> Materialize with deduplication  (cost=11.48..14.07 rows=20) (actual time=0.746..0.749 rows=19 loops=1)\n                                                -> Filter: (course.crsCode is not null)  (cost=9.38 rows=20) (actual time=0.626..0.730 rows=19 loops=1)\n                                                    -> Nested loop inner join  (cost=9.38 rows=20) (actual time=0.625..0.726 rows=19 loops=1)\n                                                        -> Filter: (course.crsCode is not null)  (cost=2.65 rows=19) (actual time=0.535..0.583 rows=19 loops=1)\n                                                            -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.531..0.577 rows=19 loops=1)\n                                                        -> Index lookup on Teaching using idx_teaching_crsCode (crsCode=course.crsCode)  (cost=0.26 rows=1) (actual time=0.006..0.007 rows=1 loops=19)\n                    -> Select #5 (subquery in condition; uncacheable)\n                        -> Aggregate: count(0)  (actual time=0.070..0.070 rows=1 loops=19)\n                            -> Nested loop semijoin  (cost=9.38 rows=20) (actual time=0.008..0.066 rows=19 loops=19)\n                                -> Filter: (course.crsCode is not null)  (cost=2.65 rows=19) (actual time=0.005..0.029 rows=19 loops=19)\n                                    -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.004..0.026 rows=19 loops=19)\n                                -> Index lookup on Teaching using idx_teaching_crsCode (crsCode=course.crsCode)  (cost=0.26 rows=1) (actual time=0.002..0.002 rows=1 loops=361)\n                -> Select #5 (subquery in projection; uncacheable)\n                    -> Aggregate: count(0)  (actual time=0.070..0.070 rows=1 loops=19)\n                        -> Nested loop semijoin  (cost=9.38 rows=20) (actual time=0.008..0.066 rows=19 loops=19)\n                            -> Filter: (course.crsCode is not null)  (cost=2.65 rows=19) (actual time=0.005..0.029 rows=19 loops=19)\n                                -> Index lookup on Course using idx_course_deptId (deptId=(@v8))  (cost=2.65 rows=19) (actual time=0.004..0.026 rows=19 loops=19)\n                            -> Index lookup on Teaching using idx_teaching_crsCode (crsCode=course.crsCode)  (cost=0.26 rows=1) (actual time=0.002..0.002 rows=1 loops=361)\n    -> Index lookup on Student using idx_student_id (id=alias.studId)  (cost=0.26 rows=1) (never executed)\n'
-- Conclusion: after adding the above 3 indexing, the performance of this quiery improved by 1/2, used EXPLAIN to identify.

